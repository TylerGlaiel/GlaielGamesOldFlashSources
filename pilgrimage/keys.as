var kUp:Boolean = false;var kDown:Boolean = false;var kLeft:Boolean = false;var kRight:Boolean = false;var kSpace:Boolean = false;var kEnter:Boolean = false;var kW:Boolean = false;var kA:Boolean = false;var kS:Boolean = false;var kD:Boolean = false;var kM:Boolean = false;var kK:Boolean = false;var kR:Boolean = false;var xkUp:Boolean = false;var xkDown:Boolean = false;var xkLeft:Boolean = false;var xkRight:Boolean = false;var xkSpace:Boolean = false;var xkEnter:Boolean = false;var xkW:Boolean = false;var xkA:Boolean = false;var xkS:Boolean = false;var xkD:Boolean = false;var xkM:Boolean = false;var xkK:Boolean = false;var xkR:Boolean = false;var paus:Boolean = false;function keyHandelerD(e:KeyboardEvent) {	if (e.keyCode == 87 && !xkW) {		kW = true;		xkW = true;	}	if (e.keyCode == 65 && !xkA) {		kA = true;		xkA = true;	}	if (e.keyCode == 83 && !xkS) {		kS = true;		xkS = true;	}	if (e.keyCode == 68 && !xkD) {		kD = true;		xkD = true;	}	if (e.keyCode == 75 && !xkK) {		kK = true;		xkK = true;	}	if (e.keyCode == 82 && !xkR) {		kR = true;		xkR = true;	}	if (e.keyCode == 38 && !xkUp) {		kUp = true;		xkUp = true;	}	if (e.keyCode == 40 && !xkDown) {		kDown = true;		xkDown = true;	}	if (e.keyCode == 37 && !xkLeft) {		kLeft = true;		xkLeft = true;	}	if (e.keyCode == 39 && !xkRight) {		kRight = true;		xkRight = true;	}	if (e.keyCode == 32 && !xkSpace) {		kSpace = true;		xkSpace = true;	}	//if (e.keyCode == 13 && !xkEnter) {		//kEnter = true;		//xkEnter = true;	//}	if (e.keyCode == 27 || e.keyCode==80 || e.keyCode == 13) {		if (paus==false) {			paus = true;			//gamePause();			//stage.frameRate = 0;		} else {			paus = false;			//gameUnpause();			//stage.frameRate = 30;		}	}	if (e.keyCode==81) {// q		var quailsareawesome = stage.quality;		if (quailsareawesome=="LOW") {			stage.quality = "HIGH";		}		if (quailsareawesome=="MEDIUM") {			stage.quality = "LOW";		}		if (quailsareawesome=="HIGH") {			stage.quality = "MEDIUM";		}	}}function keyHandelerU(e:KeyboardEvent) {	if (e.keyCode == 87) {		kW = false;		xkW = false;	}	if (e.keyCode == 65) {		kA = false;		xkA = false;	}	if (e.keyCode == 83) {		kS = false;		xkS = false;	}	if (e.keyCode == 68) {		kD = false;		xkD = false;	}	if (e.keyCode == 75) {		kK = false;		xkK = false;	}	if (e.keyCode == 82) {		kR = false;		xkR = false;	}	if (e.keyCode == 38) {		kUp = false;		xkUp = false;	}	if (e.keyCode == 40) {		kDown = false;		xkDown = false;	}	if (e.keyCode == 37) {		kLeft = false;		xkLeft = false;	}	if (e.keyCode == 39) {		kRight = false;		xkRight = false;	}	if (e.keyCode == 32) {		kSpace = false;		xkSpace = false;	}	//if (e.keyCode == 13) {		//kEnter = false;		//xkEnter = false;	//}}function mouseHandelerD(e:MouseEvent) {	kM = true;	xkM = true;}function mouseHandelerU(e:MouseEvent) {	kM = false;	xkM = false;}function lockControls() {	kUp = false;	kDown = false;	kLeft = false;	kRight = false;	kSpace = false;	kEnter = false;	kW = false;	kA = false;	kS = false;	kD = false;	kM = false;	kK = false;	kR = false;}stage.addEventListener(KeyboardEvent.KEY_DOWN, keyHandelerD,false,0,true);stage.addEventListener(KeyboardEvent.KEY_UP, keyHandelerU,false,0,true);stage.addEventListener(MouseEvent.MOUSE_DOWN, mouseHandelerD,false,0,true);stage.addEventListener(MouseEvent.MOUSE_UP, mouseHandelerU,false,0,true);