package {	import flash.events.Event;	import flash.display.MovieClip;	public class EBoss1 extends Enemy{		private var timer:int = 0;		private var dir:Number;		private var tdir:Number;		private var breakTimer:int;		public function EBoss1 (a:Attractable, b:Attractable){			super(a, b);			dir = 0;			tdir = 0;			breakTimer = 0;			handle.rumble = 150;		}		public override function update(){			var dist:Vec2D = new Vec2D(base.x - handle.x, base.y-handle.y);			var dl:Number = dist.length;			dist.length -= 600;						if(Math.random()<.002){				dir = Math.random()>.5?9*7:-9*7;			}			tdir += (dir-tdir)*.1;									if(dist.length > 10){				dist.norm();				handle.momentum.x += dist.x*9*4;				handle.momentum.y += dist.y*9*4;			} else {				var dist2:Vec2D = new Vec2D(base.x - handle.x, base.y-handle.y);				dist2.norm();				if(handle.life < 3000){					dist2.scale(3);				}				handle.momentum.x += -dist2.y*tdir;				handle.momentum.y += +dist2.x*tdir;			}						if(dl < 700){				timer = (timer+1)%200;				if(handle.life < 2000){					timer %= 120;				}				if(timer==0){					SoundEffect.play(SoundEffect.FIRE);					var speed:Vec2D = new Vec2D(0, 1).rotated(handle.clip.rotation);					speed.length = 4;					ROOT.launchMissile(new Vec2D(handle.x+speed.x*35, handle.y+speed.y*35), speed);					speed.rotate(-40);					ROOT.launchMissile(new Vec2D(handle.x+speed.x*40, handle.y+speed.y*40), speed);					speed.rotate(-35);					ROOT.launchMissile(new Vec2D(handle.x+speed.x*43, handle.y+speed.y*43), speed);					speed.rotate(40+35+40);					ROOT.launchMissile(new Vec2D(handle.x+speed.x*40, handle.y+speed.y*40), speed);					speed.rotate(35);					ROOT.launchMissile(new Vec2D(handle.x+speed.x*43, handle.y+speed.y*43), speed);					MovieClip(handle.clip).play();				}			}			if(handle.held != 0) {				breakTimer++;			} else {				breakTimer = 0;			}			if(breakTimer >= 55){				MovieClip(handle.clip).force.play();			}			if(breakTimer >= 60){				handle.breakTethers();			}			handle.stable = true;			handle.clip.rotation += Vec2D.angle2(new Vec2D(0, 1).rotated(handle.clip.rotation), new Vec2D(base.x - handle.x, base.y-handle.y)) * .1;		}	}}