package {	import flash.display.BitmapData;	import flash.geom.*;	public class Explosion {		public static var BMP:BitmapData;		public static var ScaleDown:Number;		private var particles:Vector.<Particle>;		public function Explosion(x:Number, y:Number, n:int, speed:Vec2D){			particles = new Vector.<Particle>();			for(var i:int = 0; i<n; i++){				var p:Particle = new Particle();				p.speed = new Vec2D((Math.random()*20+10)*n/40, 0);				p.speed.rotate(Math.random()*360);				p.speed.x += speed.x;				p.speed.y += speed.y;				p.pos = new Vec2D(x-Playfield.xmin, y-Playfield.ymin);				p.color = [0xFF0000, 0xFFFF00, 0xFF6500, 0x00FFFF, 0xFFFFFF][int(Math.random()*5)];				p.time = 60 + Math.random()*20;				particles.push(p);			}		}		public function update():Boolean{			var r:Number;			var c:uint;			var d:uint;			var g:uint;			var b:uint;			for(var i:int = 0; i<particles.length; i++){				if(particles[i].time<0){					particles.splice(i, 1);					i--;				} else {					particles[i].pos.x += particles[i].speed.x;					particles[i].pos.y += particles[i].speed.y;					particles[i].speed.scale(.8);					particles[i].time -= 2;					r = particles[i].time / 20.0;										d = 0x11*r*r;					if(d>0xFF) d = 0xFF;										g = 0x11*r*r;					if(g>0xFF) g = 0xFF;										b = 0x3*r*r*r*r;					if(b>0xFF) b = 0xFF;										c = 0xFF*r;					if(c>0xFF) c = 0xFF;					c = c << 24 | d << 16 | g << 8 | b;					BMP.fillRect(new Rectangle((particles[i].pos.x-r)*ScaleDown, (particles[i].pos.y-r)*ScaleDown, (r*2)*ScaleDown, (r*2)*ScaleDown), particles[i].color | c);				}			}			return particles.length != 0;		}	}}internal class Particle {	var speed:Vec2D;	var pos:Vec2D;	var color:uint;	var time:int;}